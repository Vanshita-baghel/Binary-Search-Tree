PROBLEM STATEMENT:
You are given the root of a binary search tree (BST) and an integer val.

Find the node in the BST that the node's value equals val and return the subtree rooted with that node. If such a node does not exist, return null.

CODE:

class Solution {
    public TreeNode searchBST(TreeNode root, int target) {
        if(root==null || root.val==target )    return root;
        return target<root.val ? searchBST(root.left, target) : searchBST(root.right, target);
    }
}
